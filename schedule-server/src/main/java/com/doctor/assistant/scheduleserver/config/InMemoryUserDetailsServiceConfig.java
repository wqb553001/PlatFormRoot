package com.doctor.assistant.scheduleserver.config;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.security.core.authority.SimpleGrantedAuthority;import org.springframework.security.core.userdetails.User;import org.springframework.security.core.userdetails.UserDetailsService;import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;import org.springframework.security.crypto.password.PasswordEncoder;import org.springframework.security.provisioning.InMemoryUserDetailsManager;import org.thymeleaf.util.ArrayUtils;import java.util.Arrays;import java.util.stream.Collectors;@Configurationpublic class InMemoryUserDetailsServiceConfig {    private Logger logger = LoggerFactory.getLogger(InMemoryUserDetailsServiceConfig.class);    private InMemoryUserDetailsManager inMemoryUserDetailsManager;    @Bean    public UserDetailsService inMemoryUserDetailsService() {        this.inMemoryUserDetailsManager = new InMemoryUserDetailsManager();        this.createUser("root", "root", "ROLE_USER", "ROLE_ADMIN", "GROUP_ADMIN")                .createUser("wqb", "123", "ROLE_ADMIN", "GROUP_ADMIN");        return inMemoryUserDetailsManager;    }    private InMemoryUserDetailsServiceConfig createUser(String userName, String password, String... authorities){        logger.info("Registry User into InMemory : userName = " + userName);        if(ArrayUtils.isEmpty(authorities)){authorities = new String[]{"ROLE_ADMIN","GROUP_ADMIN"};}        inMemoryUserDetailsManager.createUser(                new User(userName, passwordEncoder().encode(password),                        Arrays.stream(authorities).map(authority -> new SimpleGrantedAuthority(authority)).collect(Collectors.toList())//                        new ArrayList<SimpleGrantedAuthority>(){{//                            add(new SimpleGrantedAuthority("ROLE_USER"));//                            add(new SimpleGrantedAuthority("ROLE_ADMIN"));//                            add(new SimpleGrantedAuthority("GROUP_ADMIN"));//                        }}                ));        return this;    }    @Bean    public PasswordEncoder passwordEncoder() {        return new BCryptPasswordEncoder();    }    public static void main(String[] args) {        new InMemoryUserDetailsServiceConfig().inMemoryUserDetailsService();    }}